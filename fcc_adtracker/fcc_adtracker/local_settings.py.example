from settings import PROJECT_ROOT, MIDDLEWARE_CLASSES, INSTALLED_APPS
import os

DEBUG = False
TEMPLATE_DEBUG = DEBUG

ADMINS = (
    # ('Your Name', 'your_email@example.com'),
)


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.',  # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': '',                      # Or path to database file if using sqlite3.
        'USER': '',                      # Not used with sqlite3.
        'PASSWORD': '',                  # Not used with sqlite3.
        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
    }
}


TIME_ZONE = 'US/Eastern'

MEDIA_ROOT = ''  # Keep blank if using S3BotoStorage
MEDIA_URL = '/media/'

STATIC_ROOT = ''  # Keep blank if using S3BotoStorage
STATIC_URL = '' # Set to url for S3 bucket.


SECRET_KEY = 'generateyourownsecretkey'

#EMAIL_HOST = ''
#EMAIL_HOST_PASSWORD = ''
#EMAIL_HOST_USER = ''
#EMAIL_PORT = ''

# For emails sent to admins or managers
EMAIL_SUBJECT_PREFIX = '[Political Ad Sleuth] '

SIGNUP_EMAIL_REPLY_TO = ''
# Tuple of extra fields to serialize and save in volunteers
SIGNUP_EXTRA_FIELDS = ()

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto.S3BotoStorage'
STATICFILES_STORAGE = 'storages.backends.s3boto.S3BotoStorage'
AWS_QUERYSTRING_AUTH = False  # We don't want auth in the querystring
AWS_ACCESS_KEY_ID = ''
AWS_SECRET_ACCESS_KEY = ''
AWS_STORAGE_BUCKET_NAME = ''

DOCUMENTS_PATH = ''
DOCUMENTCLOUD_USERNAME = ''
DOCUMENTCLOUD_PASS = ''


FEATURED_BROADCASTER_STATE = 'NC'
STATES_GEOCENTERS_JSON_FILE = '../geodata/states_geocenters.json'

# Tuple of organization-advertiser ids for use in views, templates.
FEATURED_ADVERTISER_IDS = (1008, 1006, 1010)


TWITTER_CONSUMER_KEY = ''
TWITTER_CONSUMER_SECRET = ''
FACEBOOK_APP_ID = ''
FACEBOOK_API_SECRET = ''
FACEBOOK_EXTENDED_PERMISSIONS = ['email']

# django-passwords  https://github.com/dstufft/django-passwords
# These should be set to something better
PASSWORD_MIN_LENGTH = 6
PASSWORD_MAX_LENGTH = None
PASSWORD_DICTIONARY = None

GOOGLE_DOCS_ACCOUNT = ''
GOOGLE_DOCS_PASSWORD = ''
GOOGLE_DOCS_RESOURCE_ID = ''

FCC_SCRAPER_LOG = ''
SCRAPER_USER_AGENT_STRING = 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)'
SCRAPE_DELAY_TIME = 0.5
SCRAPER_LOCAL_DOC_DIR = ''

CSV_EXPORT_DIR = ''

# Api related
API_LIMIT_PER_PAGE = 20
API_MAX_RESULTS_PER_PAGE = 100
LOCKSMITH_HUB_URL = ''
LOCKSMITH_SIGNING_KEY = ''
LOCKSMITH_API_NAME = ''

# Set a tuple of DMA ids that we want a 'needs entry' to select ads from.
NEEDS_ENTRY_DMAS = (510, 535, 548, 528, 556)

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.elasticsearch_backend.ElasticsearchSearchEngine',
        'URL': 'http://127.0.0.1:9200/',
        'INDEX_NAME': 'pas',
    },
}

